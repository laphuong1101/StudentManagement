@model StudentManagement.Models.Clazz

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<p class="text-left">
    <a href="@Url.Action("Index", "Clazzs")" class="text-gray-700"><i class="fas fa-angle-left me-2"></i> Quay lại danh sách</a>
</p>
<h4>Thông tin lớp @Html.DisplayFor(model => model.ClazzName)</h4>

<div class="card card-body shadow-sm table-wrapper mb-3">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "invalid-feedback" })
            @Html.HiddenFor(model => model.ClazzId)

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.ClazzName, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ClazzName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập mã lớp học" } })
                    @Html.ValidationMessageFor(model => model.ClazzName, "", new { @class = "invalid-feedback" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.ClazzCode, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ClazzCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập tên lớp học" } } )
                    @Html.ValidationMessageFor(model => model.ClazzCode, "", new { @class = "invalid-feedback" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.ListStudentId, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.ListStudentId, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập mã lớp học" } })
                    @Html.ValidationMessageFor(model => model.ListStudentId, "", new { @class = "invalid-feedback" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "invalid-feedback" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })
                <div class="col-md-6">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "invalid-feedback" })
                </div>
            </div>
            <div class="mt-3">
                <button class="btn btn-sm mb-2 me-2 btn-outline-success" type="submit"><i class="far fa-save me-2"></i>Lưu</button>
            </div>
    </div>
    }
</div>